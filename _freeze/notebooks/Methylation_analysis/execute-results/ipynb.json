{
  "hash": "af8a34f092251b8534a0a55b0869aaf8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DNA methylation measurement\"\nauthor: \"Piero Palacios Bernuy\"\nformat: html\neditor: visual\n---\n\n\n## Data Analysis and Integration\n\n### General Idea for Inference for DNA Methylation\n\nThe functional model:\n\n$$\nY_{ij} = \\beta_{O}(l_{j}) + X_{i}*\\beta_{1}(l_j) + \\epsilon_{ij}\n$$\n\n$X_{i}$ can be a continuous variable like age or weight.\n\nThe analysis is modularized:\n\n-   First estimate the betas for every location.\n-   Then we make an analysis on those betas.\n-   Then we need to identify possible differentially methylated regions (bumps), e.g. using a threshold.\n-   We can summarise this bumps using the area or some similar measure.\n-   Another summary is to keep the length of the bump and the height.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(minfi)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'minfi' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: BiocGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'BiocGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomicRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: stats4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: S4Vectors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'S4Vectors'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:utils':\n\n    findMatches\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: IRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'IRanges'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:grDevices':\n\n    windows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomeInfoDb\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: SummarizedExperiment\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'SummarizedExperiment' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: MatrixGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'MatrixGenerics' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: matrixStats\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'matrixStats' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'MatrixGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Biobase\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Biobase'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Biostrings\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'Biostrings' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: XVector\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'XVector' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Biostrings'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:base':\n\n    strsplit\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: bumphunter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'bumphunter' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: foreach\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: iterators\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: parallel\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: locfit\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'locfit' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlocfit 1.5-9.8 \t 2023-06-11\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSetting options('download.file.method.GEOquery'='auto')\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSetting options('GEOquery.inmemory.gpl'=FALSE)\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(IlluminaHumanMethylation450kmanifest)\nlibrary(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'purrr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ purrr::accumulate()   masks foreach::accumulate()\n✖ dplyr::collapse()     masks Biostrings::collapse(), IRanges::collapse()\n✖ dplyr::combine()      masks minfi::combine(), Biobase::combine(), BiocGenerics::combine()\n✖ purrr::compact()      masks XVector::compact()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ purrr::none()         masks locfit::none()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second<-() masks S4Vectors::second<-()\n✖ dplyr::slice()        masks XVector::slice(), IRanges::slice()\n✖ purrr::when()         masks foreach::when()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntargets <- read.csv(\"targets.txt\", sep = \"\\t\")\n```\n:::\n\n\n``` r\n\n# This code is not executed due to limit size (50 mb) of github\n# Please load the 450karrar_processed.rds data that is the resulto of this code\n# If you want to do this with the original data, you can find this data on: \n# https://github.com/genomicsclass/tcgaMethylationSubset\n\n\ntargets$Basename <- paste0(getwd(),\"/notebooks/\", targets$Basename)\n\ndat <- read.metharray(targets$Basename, verbose = T)\n\npData(dat) <- as(targets, \"DataFrame\")\n\n## preprocessing\n\ndat <- preprocessIllumina(dat)\ndat <- mapToGenome(dat)\ndat <- ratioConvert(dat, type=\"Ilumina\")\n\n\nindex_tissue = which(pData(dat)$Tissue != \"breast\")\ndat <- dat[,index_tissue]\n\nindex_chr = which(seqnames(dat)==\"chr22\")\n\ndat <- dat[index_chr,]\n```\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat <- readRDS(file = \"450karray_processed.rds\")\n\nX <- model.matrix(~pData(dat)$Tissue)\n\nlibrary(doParallel)\ndetectCores()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nregisterDoParallel(cores=8)\n\n\nres <- minfi::bumphunter(dat, X, cutoff=0.1, B=1000)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Parallelizing using 8 workers/cores (backend: doParallelSNOW, version: 1.0.17).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Computing coefficients.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Performing 1000 permutations.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Computing marginal permutation p-values.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] cutoff: 0.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Finding regions.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in regionFinder(x = beta, chr = chr, pos = pos, cluster = cluster, :\nNAs found and removed. ind changed.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Found 1199 bumps.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Computing regions for each permutation.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Estimating p-values and FWER.\n```\n\n\n:::\n:::\n\n\n### CpG Island Shores\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(AnnotationHub)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'AnnotationHub' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: BiocFileCache\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'BiocFileCache' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: dbplyr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'dbplyr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'dbplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:dplyr':\n\n    ident, sql\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'AnnotationHub'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:Biobase':\n\n    cache\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nah <- AnnotationHub()\ncgi_id <- \"AH5086\"\n\ncgi <- ah[[cgi_id]]\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nloading from cache\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# remember that this is only the chromosome 22\n\ntab <- res$table[res$table$fwer <= 0.05, ]\ntab <- makeGRangesFromDataFrame(tab, keep.extra.columns = TRUE)\n\ntab\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGRanges object with 336 ranges and 11 metadata columns:\n       seqnames            ranges strand |     value      area   cluster\n          <Rle>         <IRanges>  <Rle> | <numeric> <numeric> <numeric>\n  1021    chr22 30476089-30476525      * | -0.296775   3.26452      1237\n  1124    chr22 45404910-45406545      * | -0.156597   2.50556      2673\n  1125    chr22 45608345-45608713      * | -0.225305   2.25305      2687\n   693    chr22 44568387-44568913      * |  0.246873   2.22186      2606\n   729    chr22 45704675-45705042      * |  0.271705   1.90193      2707\n   ...      ...               ...    ... .       ...       ...       ...\n   216    chr22          24828655      * |  0.213408  0.213408       884\n  1199    chr22 51169028-51169500      * | -0.156540  0.313081      3464\n   793    chr22          48030204      * |  0.212961  0.212961      2978\n   669    chr22          43619731      * |  0.212899  0.212899      2538\n   480    chr22 38219283-38219336      * |  0.155803  0.311607      1829\n       indexStart  indexEnd         L  clusterL    p.value      fwer\n        <integer> <integer> <numeric> <integer>  <numeric> <numeric>\n  1021       2985      2995        11        11          0         0\n  1124       6688      6703        16        18          0         0\n  1125       6738      6747        10        10          0         0\n   693       6520      6528         9        10          0         0\n   729       6790      6796         7        20          0         0\n   ...        ...       ...       ...       ...        ...       ...\n   216       2102      2102         1         1 0.00218195     0.044\n  1199       8524      8525         2         2 0.00298348     0.045\n   793       7407      7407         1         1 0.00222648     0.045\n   669       6368      6368         1         1 0.00222648     0.045\n   480       4497      4498         2         5 0.00329519     0.048\n       p.valueArea  fwerArea\n         <numeric> <numeric>\n  1021 0.00000e+00     0.000\n  1124 0.00000e+00     0.000\n  1125 0.00000e+00     0.000\n   693 0.00000e+00     0.000\n   729 4.45295e-05     0.001\n   ...         ...       ...\n   216   0.1073162     0.523\n  1199   0.0338870     0.259\n   793   0.1078951     0.524\n   669   0.1079396     0.525\n   480   0.0342432     0.260\n  -------\n  seqinfo: 1 sequence from an unspecified genome; no seqlengths\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmap = distanceToNearest(tab, cgi)\n\ndistances <- mcols(map)$distance\n\ncut(distances, c(0,1,2000,5000,Inf), include.lowest = TRUE, right = F) |> \n    table() |> \n    prop.table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n        [0,1)     [1,2e+03) [2e+03,5e+03)   [5e+03,Inf] \n    0.2827381     0.3005952     0.1934524     0.2232143 \n```\n\n\n:::\n:::\n\n\nWith matplot:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntab <- tab[order(mcols(tab)$area, decreasing = T)]\n\ntab <- tab+3000\n\ni = 1\n\ndata_index <- which(granges(dat) %over% tab[i,])\ncgi_index <- which(cgi %over% tab[i,])\nthe_cgi <- cgi[cgi_index]\n\n\npos <- start(dat)[data_index]\nxlim <- range(c(pos, start(the_cgi), end(the_cgi)))\n\nbeta <- getBeta(dat)\ny <- beta[data_index,]\n\ncols <- as.factor(pData(dat)$Tissue)\nlibrary(rafalib)\n\nmatplot(pos,y, col=as.numeric(cols), xlim=xlim, ylim = c(0,1),\n        ylab=\"Methylation\",xlab=\"Genomic position\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in matplot(pos, y, col = as.numeric(cols), xlim = xlim, ylim = c(0, :\ndefault 'pch' is smaller than number of columns and hence recycled\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Methylation_analysis_files/figure-ipynb/unnamed-chunk-7-1.png)\n:::\n\n```{.r .cell-code .hidden}\n# apply(cbind(start(the_cgi), end(the_cgi)),1,FUN = function(x){\n#     segments(x[1],0,x[2],0,lwd=5, col=3)\n# })\n```\n:::\n\n\nWith ggplot2\n\n\n::: {#cell-fig-meth .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-meth\n\ndd <- pData(dat) |> \n  as.data.frame() |> \n  as_tibble() |> \n  dplyr::select(Sex,Tissue,Status,bcr_sample_barcode)\n\nd <- y |> \n  as.data.frame() |> \n  as_tibble() |> \n  mutate(CpGs = rownames(y))\n\ncolnames(d)[1:(length(colnames(d))-1)] <- dd$bcr_sample_barcode\n\nd <- d |> \n  pivot_longer(cols = colnames(d)[1:(length(colnames(d))-1)], names_to = \"sample_names\", values_to = \"methylation_values\")\n\nd <- d |> \n  left_join(dd, by = join_by(sample_names == bcr_sample_barcode))\n\npos <- granges(dat) |> \n  as.data.frame() \n\npos2 <- pos |> \n  as_tibble() |> \n  mutate(CpGs = rownames(pos)) |> \n  dplyr::select(start, CpGs)\n\nd <- d |> \n  left_join(pos2, by = join_by(CpGs))\n\np1 <- d |> \n  ggplot(aes(start, methylation_values, colour=Tissue)) + \n  geom_point() +\n  facet_wrap(~Status) +\n  theme_minimal() +\n  labs(x = \"Position\", y=\"Methylation Value\") +\n  paletteer::scale_color_paletteer_d(\"awtools::a_palette\")\n\np1\n```\n\n::: {.cell-output-display}\n![](Methylation_analysis_files/figure-ipynb/fig-meth-1.png){#fig-meth}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot(pos, res$fitted[data_index], xlim=xlim, ylim=c(-0.4,0.4))\nabline(h=0)\n```\n\n::: {.cell-output-display}\n![](Methylation_analysis_files/figure-ipynb/unnamed-chunk-9-1.png)\n:::\n\n```{.r .cell-code .hidden}\n# apply(cbind(start(the_cgi), end(the_cgi)),1, function(x){\n#     segments(x[1],0,x[2],0,lwd=5, col=3)\n# })\n```\n:::\n",
    "supporting": [
      "Methylation_analysis_files\\figure-ipynb"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}