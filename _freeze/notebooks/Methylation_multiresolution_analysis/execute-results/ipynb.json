{
  "hash": "e1cf1a0b8022144056816b7ac084f553",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DNA methylation measurement\"\nsubtitle: \"Multi-resolution analysis\"\nauthor: \"Piero Palacios Bernuy\"\nformat: html\neditor: visual\n---\n\n\n## Loading data\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(minfi)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'minfi' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: BiocGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'BiocGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomicRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: stats4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: S4Vectors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'S4Vectors'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:utils':\n\n    findMatches\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: IRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'IRanges'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:grDevices':\n\n    windows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomeInfoDb\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: SummarizedExperiment\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'SummarizedExperiment' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: MatrixGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'MatrixGenerics' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: matrixStats\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'matrixStats' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'MatrixGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Biobase\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Biobase'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Biostrings\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'Biostrings' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: XVector\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'XVector' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Biostrings'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:base':\n\n    strsplit\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: bumphunter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'bumphunter' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: foreach\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: iterators\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: parallel\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: locfit\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'locfit' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nlocfit 1.5-9.8 \t 2023-06-11\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSetting options('download.file.method.GEOquery'='auto')\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSetting options('GEOquery.inmemory.gpl'=FALSE)\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(IlluminaHumanMethylation450kmanifest)\nlibrary(IlluminaHumanMethylation450kanno.ilmn12.hg19)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'ggplot2' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'purrr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ purrr::accumulate()   masks foreach::accumulate()\n✖ dplyr::collapse()     masks Biostrings::collapse(), IRanges::collapse()\n✖ dplyr::combine()      masks minfi::combine(), Biobase::combine(), BiocGenerics::combine()\n✖ purrr::compact()      masks XVector::compact()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ purrr::none()         masks locfit::none()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second<-() masks S4Vectors::second<-()\n✖ dplyr::slice()        masks XVector::slice(), IRanges::slice()\n✖ purrr::when()         masks foreach::when()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(TxDb.Hsapiens.UCSC.hg19.knownGene)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomicFeatures\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'GenomicFeatures' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: AnnotationDbi\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'AnnotationDbi' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'AnnotationDbi'\n\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(Gviz)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'Gviz' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: grid\n\nAttaching package: 'grid'\n\nThe following object is masked from 'package:Biostrings':\n\n    pattern\n```\n\n\n:::\n:::\n\n\n``` r\n# This code is not executed due to limit size (50 mb) of github\n# Please load the 450karrar_processed.rds data that is the resulto of this code\n# If you want to do this with the original data, you can find this data on: \n# https://github.com/genomicsclass/tcgaMethylationSubset\n\ntargets <- read.csv(\"targets.txt\", sep = \"\\t\")\n\ntargets$Basename <- paste0(getwd(),\"/notebooks/\", targets$Basename)\n\ndat <- read.metharray(targets$Basename, verbose = T)\n\npData(dat) <- as(targets, \"DataFrame\")\n\n## preprocessing\n\ndat <- preprocessIllumina(dat)\ndat <- mapToGenome(dat)\n\n## Here we are collaping CpGs for a zxoom_out view of the methylated sites\ndat <- cpgCollapse(dat))\n```\n\n## Multi-resolution analysis\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndat <- readRDS(file = \"450karray_processed_multiresolution2.rds\")\n\ntargets <- pData(dat$object)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: Island-status\n\nmcols(granges(dat$object))$type |> \n    table() |> \n    prop.table() |> \n    as.data.frame() |> \n    dplyr::rename(\"Island Status\" = Var1) |> \n    gt::gt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"iiywtjxqmo\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#iiywtjxqmo table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#iiywtjxqmo thead, #iiywtjxqmo tbody, #iiywtjxqmo tfoot, #iiywtjxqmo tr, #iiywtjxqmo td, #iiywtjxqmo th {\n  border-style: none;\n}\n\n#iiywtjxqmo p {\n  margin: 0;\n  padding: 0;\n}\n\n#iiywtjxqmo .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#iiywtjxqmo .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#iiywtjxqmo .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#iiywtjxqmo .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#iiywtjxqmo .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#iiywtjxqmo .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#iiywtjxqmo .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#iiywtjxqmo .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#iiywtjxqmo .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#iiywtjxqmo .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#iiywtjxqmo .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#iiywtjxqmo .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#iiywtjxqmo .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#iiywtjxqmo .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#iiywtjxqmo .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iiywtjxqmo .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#iiywtjxqmo .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#iiywtjxqmo .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#iiywtjxqmo .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iiywtjxqmo .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#iiywtjxqmo .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iiywtjxqmo .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#iiywtjxqmo .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iiywtjxqmo .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#iiywtjxqmo .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#iiywtjxqmo .gt_left {\n  text-align: left;\n}\n\n#iiywtjxqmo .gt_center {\n  text-align: center;\n}\n\n#iiywtjxqmo .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#iiywtjxqmo .gt_font_normal {\n  font-weight: normal;\n}\n\n#iiywtjxqmo .gt_font_bold {\n  font-weight: bold;\n}\n\n#iiywtjxqmo .gt_font_italic {\n  font-style: italic;\n}\n\n#iiywtjxqmo .gt_super {\n  font-size: 65%;\n}\n\n#iiywtjxqmo .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#iiywtjxqmo .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#iiywtjxqmo .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#iiywtjxqmo .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#iiywtjxqmo .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#iiywtjxqmo .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#iiywtjxqmo .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Island Status\">Island Status</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Freq\">Freq</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Island Status\" class=\"gt_row gt_center\">Island</td>\n<td headers=\"Freq\" class=\"gt_row gt_right\">0.1811251</td></tr>\n    <tr><td headers=\"Island Status\" class=\"gt_row gt_center\">OpenSea</td>\n<td headers=\"Freq\" class=\"gt_row gt_right\">0.2134595</td></tr>\n    <tr><td headers=\"Island Status\" class=\"gt_row gt_center\">Shelf</td>\n<td headers=\"Freq\" class=\"gt_row gt_right\">0.2705047</td></tr>\n    <tr><td headers=\"Island Status\" class=\"gt_row gt_center\">Shore</td>\n<td headers=\"Freq\" class=\"gt_row gt_right\">0.3349106</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncancer_status <- factor(pData(dat$object)$Status,\n                        levels = c(\"normal\",\"cancer\"))\n\nX <- model.matrix(~cancer_status)\n\nres <- blockFinder(dat$object,X,cutoff = 0.05)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Using a single core (backend: doSEQ, version: 1.5.2).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Computing coefficients.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Smoothing coefficients.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: rngtools\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Finding regions.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n[bumphunterEngine] Found 44 bumps.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntab=makeGRangesFromDataFrame(res$table, keep.extra.columns = T)\nindex= granges(dat$obj)%over% (tab[1]+10000)\npos=start(dat$obj)[index]\ncol=as.numeric(cancer_status)\nmatplot(pos,getBeta(dat$obj)[index,],col=col,pch=1,cex=0.5)\n```\n\n::: {.cell-output-display}\n![](Methylation_multiresolution_analysis_files/figure-ipynb/unnamed-chunk-5-1.png)\n:::\n\n```{.r .cell-code .hidden}\n##and these are the estimated difference\nplot(pos,res$fitted[index])\n```\n\n::: {.cell-output-display}\n![](Methylation_multiresolution_analysis_files/figure-ipynb/unnamed-chunk-5-2.png)\n:::\n:::\n\n\n## Plotting\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngenome <- \"hg19\"\n\ndmr <- res$table[2,]\nchrom <- dmr$chr\nstart <- dmr$start\nend <- dmr$end\n\nminbase <- start\nmaxbase <- end\n\npal <- c(\"#E41A1C\", \"#377EB8\")\n\niTrack <- IdeogramTrack(genome = genome, chromosome = dmr$chr, name = dmr$chr)\ngTrack <- GenomeAxisTrack(col=\"black\", cex=1, name = \"\", fontcolor=\"black\")\n\n# rTrack <- UcscTrack(genome = genome, \n#                     chromosome = chrom, \n#                     track = \"NCBI RefSeq\",\n#                     from = minbase,\n#                     to = maxbase, \n#                     trackType = \"GeneRegionTrack\",\n#                     rstarts = \"exonStarts\", \n#                     rends = \"exonEnds\", \n#                     gene = \"name\",\n#                     symbol = \"name2\", \n#                     transcript = \"name\",\n#                     strand = \"strand\",\n#                     fill = \"darkblue\",\n#                     stacking = \"squish\", \n#                     name = \"RefSeq\",\n#                     showId = TRUE, \n#                     geneSymbol = TRUE)\n\ngr <- granges(dat$object)\n\nindex_1 <- which(targets$Status == \"normal\")\nindex_2 <- which(targets$Status == \"cancer\")\n\ntargets$Status[index_1] <- paste(targets$Status[index_1],1:17, sep = \".\")\ntargets$Status[index_2] <- paste(targets$Status[index_2],1:17, sep = \".\")\n\na <- getBeta(dat$object) |> \n    as.data.frame()\n\nnames(a) <- targets$Status\nindex <- order(targets$Status)\na <- a[,index]\n\nfor(i in 1:length(targets$Status)){\n    \n    n <- colnames(a)[i]\n    mcols(gr)[,n] <- a[,i]\n    \n}\n\n# gr$beta <- getBeta(dat$object)\n\nmcols(gr) <- mcols(gr)[,4:37]\n\nmethTrack <- DataTrack(range = gr,\n                       genome = genome,\n                       chromosome = chrom, \n                       ylim = c(-0.05, 1.05),\n                       col = pal,\n                       type = c(\"a\"), \n                       name = \"DNA Meth.\\n(beta value)\",\n                       background.panel = \"white\", \n                       legend = TRUE, \n                       cex.title = 0.8,\n                       cex.axis = 0.8, \n                       cex.legend = 0.8)\n\ndmrTrack <- AnnotationTrack(start = start, \n                            end = end, \n                            genome = genome, \n                            name = \"DMR - Multi-resolution\",\n                            chromosom = chrom)\n\ntxTr <- GeneRegionTrack(TxDb.Hsapiens.UCSC.hg19.knownGene, chromosome = chrom,name=\"Longest transcript\")\n\ntracks <- list(iTrack, gTrack, methTrack, dmrTrack, txTr)\nsizes <- c(2, 2, 5, 2, 1) # set up the relative sizes of the tracks\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npng(file=\"track_plot.png\", width = 1200, height = 550)\nplotTracks(tracks, \n           from = minbase, \n           to = maxbase, \n           showTitle = TRUE, \n           add53 = TRUE,\n           add35 = TRUE, \n           grid = TRUE, \n           lty.grid = 3, \n           sizes = sizes,\n           groups = rep(c(\"cancer\",\"normal\"), each=17),\n           length(tracks),\n           shape=\"arrow\",collapseTranscripts = \"longest\")\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "Methylation_multiresolution_analysis_files\\figure-ipynb"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}