{
  "hash": "943cbf673f943d9cd64e560192d74222",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"DNA methylation measurement by sequencing\"\nsubtitle: \"Methyl-Seq\"\nauthor: \"Piero Palacios Bernuy\"\nformat: html\neditor: visual\n---\n\n\n# Whole-genome bisulfite sequencing (WGBS)\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(bsseq)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'bsseq' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: BiocGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'BiocGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomicRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: stats4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: S4Vectors\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'S4Vectors'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:utils':\n\n    findMatches\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: IRanges\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'IRanges'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:grDevices':\n\n    windows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: GenomeInfoDb\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: SummarizedExperiment\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'SummarizedExperiment' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: MatrixGenerics\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'MatrixGenerics' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: matrixStats\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'matrixStats' was built under R version 4.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'MatrixGenerics'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: Biobase\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'Biobase'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n```\n\n\n:::\n:::\n\n\nThe metadata loaded below can be downloaded from SRA from NCBI or from GEO (GSE46644).\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntargets <- read.table(file.path(\"targets2.txt\"),header = T, sep = \"\\t\")\n\ntargets <- DataFrame(targets, row.names = as.character(targets$Run))\n```\n:::\n\n\n``` r\n\n# This code is not executed due to limit size (50 mb) of github\n# Please load the 450karrar_processed.rds data that is the resulto of this code\n# If you want to do this with the original data, you can find this data on: \n# https://github.com/genomicsclass/colonCancerWGBS\n\npath <- paste0(getwd(),\"/colonCancerWGBS-master\")\n\ntargets <- read.table(file.path(path,\"targets2.txt\"),header = T, sep = \"\\t\")\n\ntargets <- DataFrame(targets, row.names = as.character(targets$Run))\n\ncovfiles <- file.path(path, paste0(rownames(targets), \".chr22.cov\"))\n\ncolonCancerWGBS <- read.bismark(files = covfiles, rmZeroCov = TRUE,\n                                colData = targets)\n```\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncolonCancerWGBS <- readRDS(\"methyl_seq.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncov <- getCoverage(colonCancerWGBS,type = \"Cov\")\nm <- getCoverage(colonCancerWGBS,type = \"M\")\n\n# proportion of cpgs that have coverage in all samples\n\nindex=apply(cov>0,1,all)\nmean(index)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7743644\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntot = rowSums(cov)\n\nhist(tot)\n```\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\n#there are some very large values\n\ntot |> \n  log10() |> \n  hist()\n```\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nloc= start(colonCancerWGBS)\n\n##plot the coverage by pieces\n\nfor(i in 1:11){\n  index=1:100000+100000*i ##very ad-hoc\n  plot(loc[index],tot[index],cex=.5,ylim=c(0,300))\n}\n```\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-5-13.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Methylation status\nmeth_status <- m/cov\nmeth_status |> tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           SRR949210 SRR949211 SRR949212 SRR949213 SRR949214 SRR949215\n[1140635,] 0.6666667         1      0.75 0.8571429 1.0000000 0.8888889\n[1140636,] 0.3333333       NaN      0.60 0.8750000 1.0000000 0.8750000\n[1140637,] 0.5000000       NaN      0.75 1.0000000 0.6666667 0.8571429\n[1140638,] 0.5000000       NaN      0.50 0.7500000 0.3333333 0.7500000\n[1140639,] 0.5000000       NaN      0.50 1.0000000 0.5000000 0.8333333\n[1140640,] 0.5000000       NaN      1.00 0.0000000 0.0000000 1.0000000\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Standard error of this estimate\n1/sqrt(cov) |> \n  tail()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           SRR949210 SRR949211 SRR949212 SRR949213 SRR949214 SRR949215\n[1140635,] 0.5773503         1 0.5000000 0.3779645 1.0000000 0.3333333\n[1140636,] 0.5773503       Inf 0.4472136 0.3535534 0.7071068 0.3535534\n[1140637,] 0.5000000       Inf 0.5000000 0.5000000 0.5773503 0.3779645\n[1140638,] 0.5000000       Inf 0.5000000 0.5000000 0.5773503 0.5000000\n[1140639,] 0.5000000       Inf 0.7071068 0.7071068 0.7071068 0.4082483\n[1140640,] 0.7071068       Inf 0.7071068 1.0000000 1.0000000 0.4472136\n```\n\n\n:::\n:::\n\n\n# Data Analysis\n\nFirst we need to smooth the data:\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(BiocParallel)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'BiocParallel' was built under R version 4.3.1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nbs_fit <- BSmooth(BSseq = colonCancerWGBS, BPPARAM = BiocParallel::MulticoreParam(workers = 8), verbose = T)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in BiocParallel::MulticoreParam(workers = 8): MulticoreParam() not\nsupported on Windows, use SnowParam()\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n\nWarning in lfproc(x, y, weights = weights, cens = cens, base = base, geth =\ngeth, : procv: parameters out of bounds\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Average coverage of CpGs \nround(colMeans(getCoverage(bs_fit)), 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSRR949210 SRR949211 SRR949212 SRR949213 SRR949214 SRR949215 \n      7.6       7.6       8.7       8.8       8.7       8.8 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Number of CpGs\nlength(bs_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1140640\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Number of CpGs which are covered by at least 1 read in all 6 samples\nsum(rowSums(cov >= 1) == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 883271\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Number of CpGs with 0 coverage in all samples\nsum(rowSums(cov) == 0) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# this happens due to the rmZeroCov = TRUE parameter inside the function read.bismark()\n```\n:::\n\n\n# Filtering loci\n\nThere isn't a manual for this task.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nkeep_loci <- which(rowSums(cov[, bs_fit$title == \"Colon_Tumor_Primary\"] >= 2) >= 2 &\n                     rowSums(cov[, bs_fit$title == \"Colon_Primary_Normal\"] >= 2) >= 2)\n\nkeep_loci |> length()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 891744\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbs_fit <- bs_fit[keep_loci,]\nbs_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAn object of type 'BSseq' with\n  891744 methylation loci\n  6 samples\nhas been smoothed with\n  BSmooth (ns = 70, h = 1000, maxGap = 100000000) \nAll assays are in-memory\n```\n\n\n:::\n:::\n\n\n# Compute t-statistics\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nbs_tstat <- BSmooth.tstat(BSseq = bs_fit, group1 = c(\"SRR949210\",\"SRR949211\",\"SRR949212\"), group2 = c(\"SRR949213\",\"SRR949214\",\"SRR949215\"), estimate.var = \"group2\", local.correct = T, verbose = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[BSmooth.tstat] preprocessing ... done in 0.5 sec\n[BSmooth.tstat] computing stats within groups ... done in 0.6 sec\n[BSmooth.tstat] computing stats across groups ... done in 1.4 sec\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplot(bs_tstat)\n```\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n# Finding DMR's\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndmrs0 <- dmrFinder(bs_tstat, cutoff = c(-4.6, 4.6))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[dmrFinder] creating dmr data.frame\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndmrs <- subset(dmrs0, n >= 3 & abs(meanDiff) >= 0.1)\nnrow(dmrs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2658\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-dmr\n\ndf <- pData(bs_fit)\ndf$col <- rep(c(\"red\", \"blue\"), each=3)\n\npData(bs_fit) <- df\n\nplotRegion(bs_fit, dmrs[1,], extend = 10000, addRegions = dmrs)\n```\n\n::: {.cell-output-display}\n![](Methyl_Seq_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n# Other type of plots\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(Gviz)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: package 'Gviz' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: grid\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngenome <- \"hg19\"\n\ndmr <- dmrs[1,]\nchrom <- paste0(\"chr\",dmr$chr)\nstart <- dmr$start\nend <- dmr$end\n\nminbase <- start - 0.05 * (end - start)\nmaxbase <- end + 0.05 * (end - start)\n\npal <- c(\"#377EB8\",\"#E41A1C\")\n\niTrack <- IdeogramTrack(genome = genome, chromosome = chrom, name = chrom)\ngTrack <- GenomeAxisTrack(col=\"black\", cex=1, name = \"\", fontcolor=\"black\")\n\nrTrack <- UcscTrack(genome = genome, \n                    chromosome = chrom, \n                    track = \"NCBI RefSeq\",\n                    from = 44.9e6,to = 45.2e6, \n                    trackType = \"GeneRegionTrack\",\n                    rstarts = \"exonStarts\", \n                    rends = \"exonEnds\", \n                    gene = \"name\",\n                    symbol = \"name2\", \n                    transcript = \"name\",\n                    strand = \"strand\",\n                    fill = \"darkblue\",\n                    stacking = \"squish\", \n                    name = \"RefSeq\",\n                    showId = TRUE, \n                    geneSymbol = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in .local(x, ...): 'track' parameter is deprecated now you go by the 'table' instead\n                Use ucscTables(genome, track) to retrieve the list of tables for a track\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning in .local(x, ...): 'track' parameter is deprecated now you go by the 'table' instead\n                Use ucscTables(genome, track) to retrieve the list of tables for a track\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngr <- makeGRangesFromDataFrame(dmrs)\n\nmeth <- m/cov\nindex <- rownames(dmrs) |> as.numeric()\nmeth <- meth[index,]\n\nseqlevelsStyle(gr) <- \"UCSC\"\n\nindex_1 <- which(targets$Run %in% c(\"SRR949210\",\"SRR949211\",\"SRR949212\"))\nindex_2 <- which(targets$Run %in% c(\"SRR949213\",\"SRR949214\",\"SRR949215\"))\n\ntargets$title[index_1] <- paste(targets$title[index_1],1:3, sep = \".\")\ntargets$title[index_2] <- paste(targets$title[index_2],1:3, sep = \".\")\n\na <- meth |> \n    as.data.frame()\n\nnames(a) <- targets$title\n# index <- order(targets$Status)\n# a <- a[,index]\n\na <- a |> dplyr::mutate_all(function(x){\n    ifelse(is.nan(x),0,x)\n})\n\nfor(i in 1:length(targets$title)){\n    \n    n <- colnames(a)[i]\n    mcols(gr)[,n] <- a[,i]\n    \n}\n\n# gr$beta <- getBeta(dat$object)\n\n# mcols(gr) <- mcols(gr)[,4:37]\n\nmethTrack <- DataTrack(range = gr,\n                       genome = genome,\n                       chromosome = chrom, \n                       ylim = c(-0.05, 1.05),\n                       col = pal,\n                       type = c(\"a\",\"p\"), \n                       name = \"DNA Meth.\\n(beta value)\",\n                       background.panel = \"white\", \n                       legend = TRUE, \n                       cex.title = 0.8,\n                       cex.axis = 0.8, \n                       cex.legend = 0.8)\n\ndmrTrack <- AnnotationTrack(start = start, \n                            end = end, \n                            genome = genome, \n                            name = \"DMR - Multi-resolution\",\n                            chromosom = chrom)\n\ntracks <- list(iTrack, gTrack, methTrack, dmrTrack, rTrack)\nsizes <- c(2, 2, 5, 2, 3) # set up the relative sizes of the tracks\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npng(file=\"track_methyl_seq_plot.png\", width = 1200, height = 550)\n\nplotTracks(list(iTrack,gTrack, methTrack, dmrTrack, rTrack),add53=T, add35=T,grid=T,sizes=sizes,groups = rep(c(\"Colon_Tumor_Primary\",\"Colon_Primary_Normal\"), each=3),from = 44.9e6,to = 45.2e6)\n\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npng \n  2 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "Methyl_Seq_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}